# This file is automatically generated by hltGetConfiguration.
# /dev/CMSSW_13_0_0/GRun/V9 (CMSSW_13_0_0_pre4)

import FWCore.ParameterSet.Config as cms


HLTConfigVersion = cms.PSet(
  tableName = cms.string('/dev/CMSSW_13_0_0/GRun/V9')
)

transferSystem = cms.PSet( 
  destinations = cms.vstring( 'Tier0',
    'DQM',
    'ECAL',
    'EventDisplay',
    'Lustre',
    'None' ),
  transferModes = cms.vstring( 'default',
    'test',
    'emulator' ),
  streamA = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'Lustre' )
  ),
  streamCalibration = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamDQM = cms.PSet( 
    default = cms.vstring( 'DQM' ),
    test = cms.vstring( 'DQM',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamDQMCalibration = cms.PSet( 
    default = cms.vstring( 'DQM' ),
    test = cms.vstring( 'DQM',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamEcalCalibration = cms.PSet( 
    default = cms.vstring( 'ECAL' ),
    test = cms.vstring( 'ECAL' ),
    emulator = cms.vstring( 'None' )
  ),
  streamEventDisplay = cms.PSet( 
    default = cms.vstring( 'EventDisplay',
      'Tier0' ),
    test = cms.vstring( 'EventDisplay',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamExpressCosmics = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'Lustre' )
  ),
  streamNanoDST = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamRPCMON = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamTrackerCalibration = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  default = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'Lustre' ),
    streamLookArea = cms.PSet(  )
  ),
  streamLookArea = cms.PSet( 
    default = cms.vstring( 'DQM' ),
    test = cms.vstring( 'DQM',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  )
)
HLTIter0PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
HLTPSetMixedStepTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 ),
  seedAs5DHit = cms.bool( False )
)
HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
HLTPSetDetachedStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 2 ),
  minPt = cms.double( 0.075 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
HLTPSetJetCoreStepTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetDetachedStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedStepTrajectoryFilterBase" )    )
  )
)
HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetMixedStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
HLTIter2PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetDetachedStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetLowPtStepTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 1 ),
  minPt = cms.double( 0.075 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
HLTIter1PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
HLTPSetLowPtStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetJetCoreStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetPvClusterComparer = cms.PSet( 
  track_chi2_max = cms.double( 9999999.0 ),
  track_pt_max = cms.double( 10.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 2.5 )
)
HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) )
)
HLTPSetInitialStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetInitialStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.2 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelLessStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 2 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( False ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetPixelLessStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 0 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetTobTecStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 5 ),
  seedPairPenalty = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 0 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetTobTecStepInOutTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 0 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetTobTecStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( False ),
  maxCand = cms.int32( 2 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( False ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  seedAs5DHit = cms.bool( False )
)
HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTIter2IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT" ) )
)
HLTIter2IterL3MuonPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTIter2IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3MuonPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3MuonPSetTrajectoryFilterIT" ) )
)
HLTPSetPixelPairStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryFilterInOut = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 1 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOut" ) ),
  useSameTrajFilter = cms.bool( False ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetTobTecStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetLowPtTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.49 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetDetachedQuadStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetLowPtTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetTobTecStepInOutTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryFilterBasePreSplittingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetDetachedTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetHighPtTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetDetachedTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryBuilderPreSplittingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetLowPtQuadStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.49 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetMixedTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.4 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryFilterPreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
HLTPSetMixedTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetHighPtTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.7 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetLowPtQuadStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetPixelLessStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
HLTPSetDetachedQuadStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
HLTPSetInitialStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.6 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetTobTecStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelLessStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryFilterInOutPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryBuilderPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetLowPtQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetHighPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetLowPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelPairStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetPixelLessStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetTobTecStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetJetCoreStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetMixedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetDetachedQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetDetachedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetInitialStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetLowPtQuadStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 3.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
HLTPSetHighPtTripletStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
streams = cms.PSet( 
  ALCALowPtJet = cms.vstring( 'AlCaLowPtJet' ),
  ALCALumiPixelsCountsExpress = cms.vstring( 'AlCaLumiPixelsCountsExpress' ),
  ALCALumiPixelsCountsPrompt = cms.vstring( 'AlCaLumiPixelsCountsPrompt' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  ALCAPPSExpress = cms.vstring( 'AlCaPPSExpress' ),
  ALCAPPSPrompt = cms.vstring( 'AlCaPPSPrompt' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMGPUvsCPU = cms.vstring( 'DQMGPUvsCPU' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  ExpressCosmics = cms.vstring(  ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingDoubleElectronLowMass0 = cms.vstring( 'ParkingDoubleElectronLowMass0',
    'ParkingDoubleElectronLowMass1' ),
  ParkingDoubleElectronLowMass1 = cms.vstring( 'ParkingDoubleElectronLowMass2',
    'ParkingDoubleElectronLowMass3' ),
  ParkingDoubleElectronLowMass2 = cms.vstring( 'ParkingDoubleElectronLowMass4',
    'ParkingDoubleElectronLowMass5' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'ParkingDoubleMuonLowMass0',
    'ParkingDoubleMuonLowMass1' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'ParkingDoubleMuonLowMass2',
    'ParkingDoubleMuonLowMass3' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'ParkingDoubleMuonLowMass4',
    'ParkingDoubleMuonLowMass5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'ParkingDoubleMuonLowMass6',
    'ParkingDoubleMuonLowMass7' ),
  ParkingSingleMuon0 = cms.vstring( 'ParkingSingleMuon0' ),
  ParkingSingleMuon1 = cms.vstring( 'ParkingSingleMuon1' ),
  ParkingSingleMuon2 = cms.vstring( 'ParkingSingleMuon2' ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'EmptyBX',
    'HLTPhysics',
    'HcalNZS',
    'IsolatedBunch',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias' ),
  PhysicsDispJetBTagMuEGTau = cms.vstring( 'BTagMu',
    'DisplacedJet',
    'MuonEG',
    'Tau' ),
  PhysicsEGamma0 = cms.vstring( 'EGamma0' ),
  PhysicsEGamma1 = cms.vstring( 'EGamma1' ),
  PhysicsHLTPhysics = cms.vstring( 'EphemeralHLTPhysics' ),
  PhysicsJetMET0 = cms.vstring( 'JetMET0' ),
  PhysicsJetMET1 = cms.vstring( 'JetMET1' ),
  PhysicsMuon0 = cms.vstring( 'Muon0' ),
  PhysicsMuon1 = cms.vstring( 'Muon1' ),
  PhysicsReservedDoubleMuonLowMass = cms.vstring( 'ReservedDoubleMuonLowMass' ),
  PhysicsScoutingPFMonitor = cms.vstring( 'ScoutingPFMonitor' ),
  PhysicsZeroBias = cms.vstring( 'EphemeralZeroBias' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ScoutingPF = cms.vstring( 'ScoutingPFRun3' )
)
datasets = cms.PSet( 
  AlCaLowPtJet = cms.vstring( 'AlCa_AK8PFJet40_v17',
    'AlCa_PFJet40_v22' ),
  AlCaLumiPixelsCountsExpress = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v4' ),
  AlCaLumiPixelsCountsPrompt = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v4',
    'AlCa_LumiPixelsCounts_ZeroBias_v4' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonly_v15',
    'AlCa_EcalEtaEEonly_v15',
    'AlCa_EcalPi0EBonly_v15',
    'AlCa_EcalPi0EEonly_v15' ),
  AlCaPPSExpress = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v2',
    'HLT_PPSMaxTracksPerRP4_v2' ),
  AlCaPPSPrompt = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v2',
    'HLT_PPSMaxTracksPerRP4_v2' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v11' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_v15',
    'HLT_BTagMu_AK4DiJet170_Mu5_v14',
    'HLT_BTagMu_AK4DiJet20_Mu5_v15',
    'HLT_BTagMu_AK4DiJet40_Mu5_v15',
    'HLT_BTagMu_AK4DiJet70_Mu5_v15',
    'HLT_BTagMu_AK4Jet300_Mu5_v14',
    'HLT_BTagMu_AK8DiJet170_Mu5_v11',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v4',
    'HLT_BTagMu_AK8Jet300_Mu5_v14' ),
  Commissioning = cms.vstring( 'HLT_IsoTrackHB_v6',
    'HLT_IsoTrackHE_v6',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v3',
    'HLT_PFJet40_GPUvsCPU_v1' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v2' ),
  DQMGPUvsCPU = cms.vstring( 'DQM_EcalReconstruction_v4',
    'DQM_HcalReconstruction_v3',
    'DQM_PixelReconstruction_v4' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HT300_Beamspot_v13',
    'HLT_ZeroBias_Beamspot_v6' ),
  DisplacedJet = cms.vstring( 'HLT_CaloMET60_DTCluster50_v3',
    'HLT_CaloMET60_DTClusterNoMB1S50_v3',
    'HLT_CscCluster_Loose_v2',
    'HLT_CscCluster_Medium_v2',
    'HLT_CscCluster_Tight_v2',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v3',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v3',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v3',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v3',
    'HLT_HT425_v11',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v2',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v1',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v1',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v1',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v1',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v3',
    'HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DisplacedDijet60_DisplacedTrack_v15',
    'HLT_HT500_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT550_DisplacedDijet60_Inclusive_v15',
    'HLT_HT650_DisplacedDijet60_Inclusive_v15',
    'HLT_L1CSCShower_DTCluster50_v2',
    'HLT_L1CSCShower_DTCluster75_v2',
    'HLT_L1MET_DTCluster50_v3',
    'HLT_L1MET_DTClusterNoMB1S50_v3',
    'HLT_L1Mu6HT240_v2',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v1',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v1',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v1',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v1',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v1',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v1',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_v3',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v3',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v3',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v3',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v3',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v3' ),
  EGamma0 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v6',
    'HLT_DiPhoton10Time1ns_v2',
    'HLT_DiPhoton10Time1p2ns_v2',
    'HLT_DiPhoton10Time1p4ns_v2',
    'HLT_DiPhoton10Time1p6ns_v2',
    'HLT_DiPhoton10Time1p8ns_v2',
    'HLT_DiPhoton10Time2ns_v2',
    'HLT_DiPhoton10_CaloIdL_v2',
    'HLT_DiPhoton10sminlt0p12_v2',
    'HLT_DiPhoton10sminlt0p1_v2',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v16',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v3',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v3',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v15',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v15',
    'HLT_DoubleEle25_CaloIdL_MW_v7',
    'HLT_DoubleEle27_CaloIdL_MW_v7',
    'HLT_DoubleEle33_CaloIdL_MW_v20',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v22',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v22',
    'HLT_DoublePhoton33_CaloIdL_v9',
    'HLT_DoublePhoton70_v9',
    'HLT_DoublePhoton85_v17',
    'HLT_ECALHT800_v12',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v17',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v20',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v10',
    'HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v10',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v18',
    'HLT_Ele15_IsoVVVL_PFHT450_v18',
    'HLT_Ele15_IsoVVVL_PFHT600_v22',
    'HLT_Ele15_WPLoose_Gsf_v5',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v11',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_Ele20_WPLoose_Gsf_v8',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v20',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v20',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_Ele27_WPTight_Gsf_v18',
    'HLT_Ele28_HighEta_SC20_Mass55_v15',
    'HLT_Ele28_WPTight_Gsf_v3',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v15',
    'HLT_Ele30_WPTight_Gsf_v3',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v15',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v11',
    'HLT_Ele32_WPTight_Gsf_v17',
    'HLT_Ele35_WPTight_Gsf_L1EGMT_v7',
    'HLT_Ele35_WPTight_Gsf_v11',
    'HLT_Ele38_WPTight_Gsf_v11',
    'HLT_Ele40_WPTight_Gsf_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v20',
    'HLT_Ele50_IsoVVVL_PFHT450_v18',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v20',
    'HLT_Photon100EBHE10_v4',
    'HLT_Photon110EB_TightID_TightIso_v4',
    'HLT_Photon120_R9Id90_HE10_IsoM_v16',
    'HLT_Photon120_v15',
    'HLT_Photon150_v9',
    'HLT_Photon165_R9Id90_HE10_IsoM_v17',
    'HLT_Photon175_v17',
    'HLT_Photon200_v16',
    'HLT_Photon20_HoverELoose_v12',
    'HLT_Photon20_v4',
    'HLT_Photon300_NoHE_v15',
    'HLT_Photon30EB_TightID_TightIso_v3',
    'HLT_Photon30_HoverELoose_v12',
    'HLT_Photon33_v7',
    'HLT_Photon50_R9Id90_HE10_IsoM_v16',
    'HLT_Photon50_v15',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_v14',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v7',
    'HLT_Photon75_R9Id90_HE10_IsoM_v16',
    'HLT_Photon75_v15',
    'HLT_Photon90_R9Id90_HE10_IsoM_v16',
    'HLT_Photon90_v15' ),
  EGamma1 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v6',
    'HLT_DiPhoton10Time1ns_v2',
    'HLT_DiPhoton10Time1p2ns_v2',
    'HLT_DiPhoton10Time1p4ns_v2',
    'HLT_DiPhoton10Time1p6ns_v2',
    'HLT_DiPhoton10Time1p8ns_v2',
    'HLT_DiPhoton10Time2ns_v2',
    'HLT_DiPhoton10_CaloIdL_v2',
    'HLT_DiPhoton10sminlt0p12_v2',
    'HLT_DiPhoton10sminlt0p1_v2',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v16',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v3',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v3',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v15',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v15',
    'HLT_DoubleEle25_CaloIdL_MW_v7',
    'HLT_DoubleEle27_CaloIdL_MW_v7',
    'HLT_DoubleEle33_CaloIdL_MW_v20',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v22',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v22',
    'HLT_DoublePhoton33_CaloIdL_v9',
    'HLT_DoublePhoton70_v9',
    'HLT_DoublePhoton85_v17',
    'HLT_ECALHT800_v12',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v17',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v20',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v10',
    'HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v10',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v18',
    'HLT_Ele15_IsoVVVL_PFHT450_v18',
    'HLT_Ele15_IsoVVVL_PFHT600_v22',
    'HLT_Ele15_WPLoose_Gsf_v5',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v11',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_Ele20_WPLoose_Gsf_v8',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v20',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v20',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_Ele27_WPTight_Gsf_v18',
    'HLT_Ele28_HighEta_SC20_Mass55_v15',
    'HLT_Ele28_WPTight_Gsf_v3',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v15',
    'HLT_Ele30_WPTight_Gsf_v3',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v15',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v11',
    'HLT_Ele32_WPTight_Gsf_v17',
    'HLT_Ele35_WPTight_Gsf_L1EGMT_v7',
    'HLT_Ele35_WPTight_Gsf_v11',
    'HLT_Ele38_WPTight_Gsf_v11',
    'HLT_Ele40_WPTight_Gsf_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v20',
    'HLT_Ele50_IsoVVVL_PFHT450_v18',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v20',
    'HLT_Photon100EBHE10_v4',
    'HLT_Photon110EB_TightID_TightIso_v4',
    'HLT_Photon120_R9Id90_HE10_IsoM_v16',
    'HLT_Photon120_v15',
    'HLT_Photon150_v9',
    'HLT_Photon165_R9Id90_HE10_IsoM_v17',
    'HLT_Photon175_v17',
    'HLT_Photon200_v16',
    'HLT_Photon20_HoverELoose_v12',
    'HLT_Photon20_v4',
    'HLT_Photon300_NoHE_v15',
    'HLT_Photon30EB_TightID_TightIso_v3',
    'HLT_Photon30_HoverELoose_v12',
    'HLT_Photon33_v7',
    'HLT_Photon50_R9Id90_HE10_IsoM_v16',
    'HLT_Photon50_v15',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_v14',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v7',
    'HLT_Photon75_R9Id90_HE10_IsoM_v16',
    'HLT_Photon75_v15',
    'HLT_Photon90_R9Id90_HE10_IsoM_v16',
    'HLT_Photon90_v15' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EmptyBX = cms.vstring( 'HLT_L1NotBptxOR_v4',
    'HLT_L1UnpairedBunchBptxMinus_v3',
    'HLT_L1UnpairedBunchBptxPlus_v3' ),
  EphemeralHLTPhysics = cms.vstring( 'HLT_EphemeralPhysics_v3' ),
  EphemeralZeroBias = cms.vstring( 'HLT_EphemeralZeroBias_v3' ),
  EventDisplay = cms.vstring( 'HLT_DoublePhoton85_v17',
    'HLT_PFJet500_v23' ),
  ExpressAlignment = cms.vstring( 'HLT_HT300_Beamspot_v13',
    'HLT_ZeroBias_Beamspot_v6' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_ExpressMuons_v3',
    'HLT_IsoMu20_v17',
    'HLT_IsoMu24_v15',
    'HLT_IsoMu27_v18',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v17',
    'HLT_Physics_v8',
    'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v2',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v6',
    'HLT_ZeroBias_IsolatedBunches_v6',
    'HLT_ZeroBias_v7' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Ele32_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v2',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT550_DisplacedDijet60_Inclusive_v15',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v2',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v17',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v3',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v10',
    'HLT_PFHT510_v19',
    'HLT_PFJet260_v22',
    'HLT_PFJet320_v22',
    'HLT_PFMET130_PFMHT130_IDTight_v22',
    'HLT_PFMET140_PFMHT140_IDTight_v22' ),
  HLTPhysics = cms.vstring( 'HLT_Physics_v8' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v14',
    'HLT_HcalPhiSym_v16' ),
  IsolatedBunch = cms.vstring( 'HLT_HcalIsolatedbunch_v6' ),
  JetMET0 = cms.vstring( 'HLT_AK8DiPFJet250_250_MassSD30_v2',
    'HLT_AK8DiPFJet250_250_MassSD50_v2',
    'HLT_AK8DiPFJet260_260_MassSD30_v2',
    'HLT_AK8DiPFJet270_270_MassSD30_v2',
    'HLT_AK8PFJet140_v17',
    'HLT_AK8PFJet200_v17',
    'HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet230_SoftDropMass40_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet260_v18',
    'HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet320_v18',
    'HLT_AK8PFJet400_MassSD30_v2',
    'HLT_AK8PFJet400_SoftDropMass40_v3',
    'HLT_AK8PFJet400_v18',
    'HLT_AK8PFJet40_v18',
    'HLT_AK8PFJet420_MassSD30_v2',
    'HLT_AK8PFJet425_SoftDropMass40_v3',
    'HLT_AK8PFJet450_MassSD30_v2',
    'HLT_AK8PFJet450_SoftDropMass40_v3',
    'HLT_AK8PFJet450_v18',
    'HLT_AK8PFJet500_v18',
    'HLT_AK8PFJet550_v13',
    'HLT_AK8PFJet60_v17',
    'HLT_AK8PFJet80_v17',
    'HLT_AK8PFJetFwd140_v16',
    'HLT_AK8PFJetFwd15_v5',
    'HLT_AK8PFJetFwd200_v16',
    'HLT_AK8PFJetFwd25_v5',
    'HLT_AK8PFJetFwd260_v17',
    'HLT_AK8PFJetFwd320_v17',
    'HLT_AK8PFJetFwd400_v17',
    'HLT_AK8PFJetFwd40_v17',
    'HLT_AK8PFJetFwd450_v17',
    'HLT_AK8PFJetFwd500_v17',
    'HLT_AK8PFJetFwd60_v16',
    'HLT_AK8PFJetFwd80_v16',
    'HLT_CaloJet500_NoJetID_v14',
    'HLT_CaloJet550_NoJetID_v9',
    'HLT_CaloMET350_NotCleaned_v6',
    'HLT_CaloMET90_NotCleaned_v6',
    'HLT_CaloMHT90_v6',
    'HLT_DiJet110_35_Mjj650_PFMET110_v11',
    'HLT_DiJet110_35_Mjj650_PFMET120_v11',
    'HLT_DiJet110_35_Mjj650_PFMET130_v11',
    'HLT_DiPFJetAve100_HFJEC_v18',
    'HLT_DiPFJetAve140_v15',
    'HLT_DiPFJetAve160_HFJEC_v18',
    'HLT_DiPFJetAve200_v15',
    'HLT_DiPFJetAve220_HFJEC_v18',
    'HLT_DiPFJetAve260_HFJEC_v1',
    'HLT_DiPFJetAve260_v16',
    'HLT_DiPFJetAve300_HFJEC_v18',
    'HLT_DiPFJetAve320_v16',
    'HLT_DiPFJetAve400_v16',
    'HLT_DiPFJetAve40_v16',
    'HLT_DiPFJetAve500_v16',
    'HLT_DiPFJetAve60_HFJEC_v17',
    'HLT_DiPFJetAve60_v16',
    'HLT_DiPFJetAve80_HFJEC_v18',
    'HLT_DiPFJetAve80_v15',
    'HLT_DoublePFJets100_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets100_PFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets200_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets200_PFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets350_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets350_PFBTagDeepJet_p71_v4',
    'HLT_DoublePFJets40_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets40_PFBTagDeepJet_p71_v3',
    'HLT_L1ETMHadSeeds_v4',
    'HLT_MET105_IsoTrk50_v11',
    'HLT_MET120_IsoTrk50_v11',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_Mu12eta2p3_PFJet40_v3',
    'HLT_Mu12eta2p3_v3',
    'HLT_PFHT1050_v20',
    'HLT_PFHT180_v19',
    'HLT_PFHT250_v19',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_v5',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v11',
    'HLT_PFHT350_v21',
    'HLT_PFHT370_v19',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_v10',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_v3',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_v3',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v10',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_v3',
    'HLT_PFHT400_SixPFJet32_v10',
    'HLT_PFHT430_v19',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_v9',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_v3',
    'HLT_PFHT450_SixPFJet36_v9',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v14',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v14',
    'HLT_PFHT510_v19',
    'HLT_PFHT590_v19',
    'HLT_PFHT680_v19',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v14',
    'HLT_PFHT780_v19',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v14',
    'HLT_PFHT890_v19',
    'HLT_PFJet110_v2',
    'HLT_PFJet140_v21',
    'HLT_PFJet200_v21',
    'HLT_PFJet260_v22',
    'HLT_PFJet320_v22',
    'HLT_PFJet400_v22',
    'HLT_PFJet40_v23',
    'HLT_PFJet450_v23',
    'HLT_PFJet500_v23',
    'HLT_PFJet550_v13',
    'HLT_PFJet60_v23',
    'HLT_PFJet80_v22',
    'HLT_PFJetFwd140_v20',
    'HLT_PFJetFwd15_v5',
    'HLT_PFJetFwd200_v20',
    'HLT_PFJetFwd25_v5',
    'HLT_PFJetFwd260_v21',
    'HLT_PFJetFwd320_v21',
    'HLT_PFJetFwd400_v21',
    'HLT_PFJetFwd40_v21',
    'HLT_PFJetFwd450_v21',
    'HLT_PFJetFwd500_v21',
    'HLT_PFJetFwd60_v21',
    'HLT_PFJetFwd80_v20',
    'HLT_PFMET100_PFMHT100_IDTight_PFHT60_v11',
    'HLT_PFMET105_IsoTrk50_v3',
    'HLT_PFMET110_PFJet100_v3',
    'HLT_PFMET110_PFMHT110_IDTight_v22',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v11',
    'HLT_PFMET120_PFMHT120_IDTight_v22',
    'HLT_PFMET130_PFMHT130_IDTight_v22',
    'HLT_PFMET140_PFMHT140_IDTight_v22',
    'HLT_PFMET200_BeamHaloCleaned_v11',
    'HLT_PFMET200_NotCleaned_v11',
    'HLT_PFMET250_NotCleaned_v11',
    'HLT_PFMET300_NotCleaned_v11',
    'HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_v11',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_v22',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v11',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v22',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v21',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v21',
    'HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_v11',
    'HLT_PFMETTypeOne110_PFMHT110_IDTight_v14',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_v11',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_v14',
    'HLT_PFMETTypeOne130_PFMHT130_IDTight_v14',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v13',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v11',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet103_88_75_15_v7',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet105_88_76_15_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet111_90_80_15_v7',
    'HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_QuadPFJet70_50_40_30_v3',
    'HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_SingleJet30_Mu12_SinglePFJet40_v13',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v11',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v11',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v11' ),
  JetMET1 = cms.vstring( 'HLT_AK8DiPFJet250_250_MassSD30_v2',
    'HLT_AK8DiPFJet250_250_MassSD50_v2',
    'HLT_AK8DiPFJet260_260_MassSD30_v2',
    'HLT_AK8DiPFJet270_270_MassSD30_v2',
    'HLT_AK8PFJet140_v17',
    'HLT_AK8PFJet200_v17',
    'HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet230_SoftDropMass40_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet260_v18',
    'HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet320_v18',
    'HLT_AK8PFJet400_MassSD30_v2',
    'HLT_AK8PFJet400_SoftDropMass40_v3',
    'HLT_AK8PFJet400_v18',
    'HLT_AK8PFJet40_v18',
    'HLT_AK8PFJet420_MassSD30_v2',
    'HLT_AK8PFJet425_SoftDropMass40_v3',
    'HLT_AK8PFJet450_MassSD30_v2',
    'HLT_AK8PFJet450_SoftDropMass40_v3',
    'HLT_AK8PFJet450_v18',
    'HLT_AK8PFJet500_v18',
    'HLT_AK8PFJet550_v13',
    'HLT_AK8PFJet60_v17',
    'HLT_AK8PFJet80_v17',
    'HLT_AK8PFJetFwd140_v16',
    'HLT_AK8PFJetFwd15_v5',
    'HLT_AK8PFJetFwd200_v16',
    'HLT_AK8PFJetFwd25_v5',
    'HLT_AK8PFJetFwd260_v17',
    'HLT_AK8PFJetFwd320_v17',
    'HLT_AK8PFJetFwd400_v17',
    'HLT_AK8PFJetFwd40_v17',
    'HLT_AK8PFJetFwd450_v17',
    'HLT_AK8PFJetFwd500_v17',
    'HLT_AK8PFJetFwd60_v16',
    'HLT_AK8PFJetFwd80_v16',
    'HLT_CaloJet500_NoJetID_v14',
    'HLT_CaloJet550_NoJetID_v9',
    'HLT_CaloMET350_NotCleaned_v6',
    'HLT_CaloMET90_NotCleaned_v6',
    'HLT_CaloMHT90_v6',
    'HLT_DiJet110_35_Mjj650_PFMET110_v11',
    'HLT_DiJet110_35_Mjj650_PFMET120_v11',
    'HLT_DiJet110_35_Mjj650_PFMET130_v11',
    'HLT_DiPFJetAve100_HFJEC_v18',
    'HLT_DiPFJetAve140_v15',
    'HLT_DiPFJetAve160_HFJEC_v18',
    'HLT_DiPFJetAve200_v15',
    'HLT_DiPFJetAve220_HFJEC_v18',
    'HLT_DiPFJetAve260_HFJEC_v1',
    'HLT_DiPFJetAve260_v16',
    'HLT_DiPFJetAve300_HFJEC_v18',
    'HLT_DiPFJetAve320_v16',
    'HLT_DiPFJetAve400_v16',
    'HLT_DiPFJetAve40_v16',
    'HLT_DiPFJetAve500_v16',
    'HLT_DiPFJetAve60_HFJEC_v17',
    'HLT_DiPFJetAve60_v16',
    'HLT_DiPFJetAve80_HFJEC_v18',
    'HLT_DiPFJetAve80_v15',
    'HLT_DoublePFJets100_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets100_PFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets200_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets200_PFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets350_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets350_PFBTagDeepJet_p71_v4',
    'HLT_DoublePFJets40_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets40_PFBTagDeepJet_p71_v3',
    'HLT_L1ETMHadSeeds_v4',
    'HLT_MET105_IsoTrk50_v11',
    'HLT_MET120_IsoTrk50_v11',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_Mu12eta2p3_PFJet40_v3',
    'HLT_Mu12eta2p3_v3',
    'HLT_PFHT1050_v20',
    'HLT_PFHT180_v19',
    'HLT_PFHT250_v19',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_v5',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v11',
    'HLT_PFHT350_v21',
    'HLT_PFHT370_v19',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_v10',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_v3',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_v3',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v10',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_v3',
    'HLT_PFHT400_SixPFJet32_v10',
    'HLT_PFHT430_v19',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_v9',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_v3',
    'HLT_PFHT450_SixPFJet36_v9',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v14',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v14',
    'HLT_PFHT510_v19',
    'HLT_PFHT590_v19',
    'HLT_PFHT680_v19',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v14',
    'HLT_PFHT780_v19',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v14',
    'HLT_PFHT890_v19',
    'HLT_PFJet110_v2',
    'HLT_PFJet140_v21',
    'HLT_PFJet200_v21',
    'HLT_PFJet260_v22',
    'HLT_PFJet320_v22',
    'HLT_PFJet400_v22',
    'HLT_PFJet40_v23',
    'HLT_PFJet450_v23',
    'HLT_PFJet500_v23',
    'HLT_PFJet550_v13',
    'HLT_PFJet60_v23',
    'HLT_PFJet80_v22',
    'HLT_PFJetFwd140_v20',
    'HLT_PFJetFwd15_v5',
    'HLT_PFJetFwd200_v20',
    'HLT_PFJetFwd25_v5',
    'HLT_PFJetFwd260_v21',
    'HLT_PFJetFwd320_v21',
    'HLT_PFJetFwd400_v21',
    'HLT_PFJetFwd40_v21',
    'HLT_PFJetFwd450_v21',
    'HLT_PFJetFwd500_v21',
    'HLT_PFJetFwd60_v21',
    'HLT_PFJetFwd80_v20',
    'HLT_PFMET100_PFMHT100_IDTight_PFHT60_v11',
    'HLT_PFMET105_IsoTrk50_v3',
    'HLT_PFMET110_PFJet100_v3',
    'HLT_PFMET110_PFMHT110_IDTight_v22',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v11',
    'HLT_PFMET120_PFMHT120_IDTight_v22',
    'HLT_PFMET130_PFMHT130_IDTight_v22',
    'HLT_PFMET140_PFMHT140_IDTight_v22',
    'HLT_PFMET200_BeamHaloCleaned_v11',
    'HLT_PFMET200_NotCleaned_v11',
    'HLT_PFMET250_NotCleaned_v11',
    'HLT_PFMET300_NotCleaned_v11',
    'HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_v11',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_v22',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v11',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v22',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v21',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v21',
    'HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_v11',
    'HLT_PFMETTypeOne110_PFMHT110_IDTight_v14',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_v11',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_v14',
    'HLT_PFMETTypeOne130_PFMHT130_IDTight_v14',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v13',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v11',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet103_88_75_15_v7',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet105_88_76_15_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet111_90_80_15_v7',
    'HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_QuadPFJet70_50_40_30_v3',
    'HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_SingleJet30_Mu12_SinglePFJet40_v13',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v11',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v11',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v11' ),
  L1Accept = cms.vstring( 'DST_Physics_v8',
    'DST_ZeroBias_v3' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v10',
    'MC_AK4CaloJets_v11',
    'MC_AK4PFJets_v19',
    'MC_AK8CaloHT_v10',
    'MC_AK8PFHT_v18',
    'MC_AK8PFJets_v19',
    'MC_AK8TrimPFJets_v19',
    'MC_CaloBTagDeepCSV_v10',
    'MC_CaloHT_v10',
    'MC_CaloMET_JetIdCleaned_v11',
    'MC_CaloMET_v10',
    'MC_CaloMHT_v10',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v15',
    'MC_DoubleEle5_CaloIdL_MW_v18',
    'MC_DoubleMuNoFiltersNoVtx_v9',
    'MC_DoubleMu_TrkIsoVVL_DZ_v13',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v17',
    'MC_Ele5_WPTight_Gsf_v10',
    'MC_IsoMu_v17',
    'MC_PFBTagDeepCSV_v12',
    'MC_PFBTagDeepJet_v3',
    'MC_PFHT_v18',
    'MC_PFMET_v19',
    'MC_PFMHT_v18',
    'MC_ReducedIterativeTracking_v14',
    'MC_Run3_PFScoutingPixelTracking_v18' ),
  Muon0 = cms.vstring( 'HLT_CascadeMu100_v5',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v3',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v3',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v3',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v3',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v3',
    'HLT_DoubleL2Mu50_v3',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v2',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v2',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v3',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v12',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v12',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v12',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v12',
    'HLT_DoubleMu43NoFiltersNoVtx_v6',
    'HLT_DoubleMu48NoFiltersNoVtx_v6',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v10',
    'HLT_HighPtTkMu100_v4',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v3',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_v3',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v3',
    'HLT_IsoMu20_v17',
    'HLT_IsoMu24_TwoProngs35_v3',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v3',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v3',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_v17',
    'HLT_IsoMu24_v15',
    'HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v2',
    'HLT_IsoMu27_v18',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v2',
    'HLT_L1SingleMu18_v4',
    'HLT_L1SingleMu25_v3',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v2',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v17',
    'HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v10',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v17',
    'HLT_Mu15_IsoVVVL_PFHT450_v17',
    'HLT_Mu15_IsoVVVL_PFHT600_v21',
    'HLT_Mu15_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v16',
    'HLT_Mu17_TrkIsoVVL_v15',
    'HLT_Mu17_v15',
    'HLT_Mu18_Mu9_SameSign_v6',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v5',
    'HLT_Mu19_TrkIsoVVL_v6',
    'HLT_Mu19_v6',
    'HLT_Mu20_v14',
    'HLT_Mu27_v15',
    'HLT_Mu37_TkMu27_v7',
    'HLT_Mu3_PFJet40_v18',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v4',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v17',
    'HLT_Mu50_IsoVVVL_PFHT450_v17',
    'HLT_Mu50_L1SingleMuShower_v1',
    'HLT_Mu50_v15',
    'HLT_Mu55_v5',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v18',
    'HLT_Mu8_TrkIsoVVL_v14',
    'HLT_Mu8_v14',
    'HLT_TripleMu_10_5_5_DZ_v12',
    'HLT_TripleMu_12_10_5_v12',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v5',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v10',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v8' ),
  Muon1 = cms.vstring( 'HLT_CascadeMu100_v5',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v3',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v3',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v3',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v3',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v3',
    'HLT_DoubleL2Mu50_v3',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v2',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v2',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v3',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v12',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v12',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v12',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v12',
    'HLT_DoubleMu43NoFiltersNoVtx_v6',
    'HLT_DoubleMu48NoFiltersNoVtx_v6',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v10',
    'HLT_HighPtTkMu100_v4',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v3',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_v3',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v3',
    'HLT_IsoMu20_v17',
    'HLT_IsoMu24_TwoProngs35_v3',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v3',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v3',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_v17',
    'HLT_IsoMu24_v15',
    'HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v2',
    'HLT_IsoMu27_v18',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v2',
    'HLT_L1SingleMu18_v4',
    'HLT_L1SingleMu25_v3',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v2',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v17',
    'HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v10',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v17',
    'HLT_Mu15_IsoVVVL_PFHT450_v17',
    'HLT_Mu15_IsoVVVL_PFHT600_v21',
    'HLT_Mu15_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v16',
    'HLT_Mu17_TrkIsoVVL_v15',
    'HLT_Mu17_v15',
    'HLT_Mu18_Mu9_SameSign_v6',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v5',
    'HLT_Mu19_TrkIsoVVL_v6',
    'HLT_Mu19_v6',
    'HLT_Mu20_v14',
    'HLT_Mu27_v15',
    'HLT_Mu37_TkMu27_v7',
    'HLT_Mu3_PFJet40_v18',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v4',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v17',
    'HLT_Mu50_IsoVVVL_PFHT450_v17',
    'HLT_Mu50_L1SingleMuShower_v1',
    'HLT_Mu50_v15',
    'HLT_Mu55_v5',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v18',
    'HLT_Mu8_TrkIsoVVL_v14',
    'HLT_Mu8_v14',
    'HLT_TripleMu_10_5_5_DZ_v12',
    'HLT_TripleMu_12_10_5_v12',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v5',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v10',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v8' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v19',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v19',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v19',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v17',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v9',
    'HLT_Mu17_Photon30_IsoCaloId_v8',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v3',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v17',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v9',
    'HLT_Mu27_Ele37_CaloIdL_MW_v7',
    'HLT_Mu37_Ele27_CaloIdL_MW_v7',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v3',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v3',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v7',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v7',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v20',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v20',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v21',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v21',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v13' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v2',
    'HLT_CDC_L2cosmic_5p5_er1p0_v2',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v6',
    'HLT_L2Mu10_NoVertex_NoBPTX_v7',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v6',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v5',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v7',
    'HLT_UncorrectedJetE30_NoBPTX_v7',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v7',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v7' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK8DiPFJet250_250_MassSD30_v2',
    'HLT_AK8DiPFJet250_250_MassSD50_v2',
    'HLT_AK8DiPFJet260_260_MassSD30_v2',
    'HLT_AK8DiPFJet270_270_MassSD30_v2',
    'HLT_AK8PFJet140_v17',
    'HLT_AK8PFJet200_v17',
    'HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet230_SoftDropMass40_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet250_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet260_v18',
    'HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetBB0p35_v3',
    'HLT_AK8PFJet275_SoftDropMass40_PFAK8ParticleNetTauTau0p30_v3',
    'HLT_AK8PFJet320_v18',
    'HLT_AK8PFJet400_MassSD30_v2',
    'HLT_AK8PFJet400_SoftDropMass40_v3',
    'HLT_AK8PFJet400_v18',
    'HLT_AK8PFJet40_v18',
    'HLT_AK8PFJet420_MassSD30_v2',
    'HLT_AK8PFJet425_SoftDropMass40_v3',
    'HLT_AK8PFJet450_MassSD30_v2',
    'HLT_AK8PFJet450_SoftDropMass40_v3',
    'HLT_AK8PFJet450_v18',
    'HLT_AK8PFJet500_v18',
    'HLT_AK8PFJet550_v13',
    'HLT_AK8PFJet60_v17',
    'HLT_AK8PFJet80_v17',
    'HLT_AK8PFJetFwd140_v16',
    'HLT_AK8PFJetFwd15_v5',
    'HLT_AK8PFJetFwd200_v16',
    'HLT_AK8PFJetFwd25_v5',
    'HLT_AK8PFJetFwd260_v17',
    'HLT_AK8PFJetFwd320_v17',
    'HLT_AK8PFJetFwd400_v17',
    'HLT_AK8PFJetFwd40_v17',
    'HLT_AK8PFJetFwd450_v17',
    'HLT_AK8PFJetFwd500_v17',
    'HLT_AK8PFJetFwd60_v16',
    'HLT_AK8PFJetFwd80_v16',
    'HLT_BTagMu_AK4DiJet110_Mu5_v15',
    'HLT_BTagMu_AK4DiJet170_Mu5_v14',
    'HLT_BTagMu_AK4DiJet20_Mu5_v15',
    'HLT_BTagMu_AK4DiJet40_Mu5_v15',
    'HLT_BTagMu_AK4DiJet70_Mu5_v15',
    'HLT_BTagMu_AK4Jet300_Mu5_v14',
    'HLT_BTagMu_AK8DiJet170_Mu5_v11',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v4',
    'HLT_BTagMu_AK8Jet300_Mu5_v14',
    'HLT_CDC_L2cosmic_10_er1p0_v2',
    'HLT_CDC_L2cosmic_5p5_er1p0_v2',
    'HLT_CaloJet500_NoJetID_v14',
    'HLT_CaloJet550_NoJetID_v9',
    'HLT_CaloMET350_NotCleaned_v6',
    'HLT_CaloMET60_DTCluster50_v3',
    'HLT_CaloMET60_DTClusterNoMB1S50_v3',
    'HLT_CaloMET90_NotCleaned_v6',
    'HLT_CaloMHT90_v6',
    'HLT_CascadeMu100_v5',
    'HLT_CscCluster_Loose_v2',
    'HLT_CscCluster_Medium_v2',
    'HLT_CscCluster_Tight_v2',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v6',
    'HLT_DiJet110_35_Mjj650_PFMET110_v11',
    'HLT_DiJet110_35_Mjj650_PFMET120_v11',
    'HLT_DiJet110_35_Mjj650_PFMET130_v11',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v19',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v19',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v19',
    'HLT_DiPFJetAve100_HFJEC_v18',
    'HLT_DiPFJetAve140_v15',
    'HLT_DiPFJetAve160_HFJEC_v18',
    'HLT_DiPFJetAve200_v15',
    'HLT_DiPFJetAve220_HFJEC_v18',
    'HLT_DiPFJetAve260_HFJEC_v1',
    'HLT_DiPFJetAve260_v16',
    'HLT_DiPFJetAve300_HFJEC_v18',
    'HLT_DiPFJetAve320_v16',
    'HLT_DiPFJetAve400_v16',
    'HLT_DiPFJetAve40_v16',
    'HLT_DiPFJetAve500_v16',
    'HLT_DiPFJetAve60_HFJEC_v17',
    'HLT_DiPFJetAve60_v16',
    'HLT_DiPFJetAve80_HFJEC_v18',
    'HLT_DiPFJetAve80_v15',
    'HLT_DiPhoton10Time1ns_v2',
    'HLT_DiPhoton10Time1p2ns_v2',
    'HLT_DiPhoton10Time1p4ns_v2',
    'HLT_DiPhoton10Time1p6ns_v2',
    'HLT_DiPhoton10Time1p8ns_v2',
    'HLT_DiPhoton10Time2ns_v2',
    'HLT_DiPhoton10_CaloIdL_v2',
    'HLT_DiPhoton10sminlt0p12_v2',
    'HLT_DiPhoton10sminlt0p1_v2',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v16',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v2',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v3',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v3',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v15',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v15',
    'HLT_DoubleEle25_CaloIdL_MW_v7',
    'HLT_DoubleEle27_CaloIdL_MW_v7',
    'HLT_DoubleEle33_CaloIdL_MW_v20',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v22',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v22',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v3',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v3',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v3',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v3',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v3',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v3',
    'HLT_DoubleL2Mu50_v3',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v2',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v2',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v3',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v2',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v3',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v2',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v12',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v12',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v12',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v12',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu43NoFiltersNoVtx_v6',
    'HLT_DoubleMu48NoFiltersNoVtx_v6',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v10',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_DoublePFJets100_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets100_PFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets116MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets128MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets200_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets200_PFBTagDeepJet_p71_v3',
    'HLT_DoublePFJets350_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets350_PFBTagDeepJet_p71_v4',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v2',
    'HLT_DoublePFJets40_PFBTagDeepCSV_p71_v3',
    'HLT_DoublePFJets40_PFBTagDeepJet_p71_v3',
    'HLT_DoublePhoton33_CaloIdL_v9',
    'HLT_DoublePhoton70_v9',
    'HLT_DoublePhoton85_v17',
    'HLT_ECALHT800_v12',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v17',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v20',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v10',
    'HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v10',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v18',
    'HLT_Ele15_IsoVVVL_PFHT450_v18',
    'HLT_Ele15_IsoVVVL_PFHT600_v22',
    'HLT_Ele15_WPLoose_Gsf_v5',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v11',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_Ele20_WPLoose_Gsf_v8',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v20',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v20',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v21',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_Ele27_WPTight_Gsf_v18',
    'HLT_Ele28_HighEta_SC20_Mass55_v15',
    'HLT_Ele28_WPTight_Gsf_v3',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v15',
    'HLT_Ele30_WPTight_Gsf_v3',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v15',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v11',
    'HLT_Ele32_WPTight_Gsf_v17',
    'HLT_Ele35_WPTight_Gsf_L1EGMT_v7',
    'HLT_Ele35_WPTight_Gsf_v11',
    'HLT_Ele38_WPTight_Gsf_v11',
    'HLT_Ele40_WPTight_Gsf_v11',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v2',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v20',
    'HLT_Ele50_IsoVVVL_PFHT450_v18',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v20',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v3',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet30_Inclusive1PtrkShortSig5_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet35_Inclusive1PtrkShortSig5_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v3',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v3',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v3',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v3',
    'HLT_HT425_v11',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v2')+cms.vstring( 'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v3',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v3',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v1',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v1',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v1',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v3',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v1',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v3',
    'HLT_HT430_DisplacedDijet30_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DisplacedDijet35_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v3',
    'HLT_HT430_DisplacedDijet60_DisplacedTrack_v15',
    'HLT_HT500_DisplacedDijet40_DisplacedTrack_v15',
    'HLT_HT550_DisplacedDijet60_Inclusive_v15',
    'HLT_HT650_DisplacedDijet60_Inclusive_v15',
    'HLT_HcalIsolatedbunch_v6',
    'HLT_HcalNZS_v14',
    'HLT_HcalPhiSym_v16',
    'HLT_HighPtTkMu100_v4',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_v3',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v3',
    'HLT_IsoMu20_v17',
    'HLT_IsoMu24_TwoProngs35_v3',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v3',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v3',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v3',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_v17',
    'HLT_IsoMu24_v15',
    'HLT_IsoMu27_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v2',
    'HLT_IsoMu27_v18',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PFAK8ParticleNetBB0p35_v2',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v2',
    'HLT_IsoTrackHB_v6',
    'HLT_IsoTrackHE_v6',
    'HLT_L1CSCShower_DTCluster50_v2',
    'HLT_L1CSCShower_DTCluster75_v2',
    'HLT_L1ETMHadSeeds_v4',
    'HLT_L1MET_DTCluster50_v3',
    'HLT_L1MET_DTClusterNoMB1S50_v3',
    'HLT_L1Mu6HT240_v2',
    'HLT_L1NotBptxOR_v4',
    'HLT_L1SingleMu18_v4',
    'HLT_L1SingleMu25_v3',
    'HLT_L1SingleMuCosmics_v2',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v1',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v1',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v1',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v1',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v1',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v1',
    'HLT_L1UnpairedBunchBptxMinus_v3',
    'HLT_L1UnpairedBunchBptxPlus_v3',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v3',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v6',
    'HLT_L2Mu10_NoVertex_NoBPTX_v7',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v6',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v5',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v2',
    'HLT_MET105_IsoTrk50_v11',
    'HLT_MET120_IsoTrk50_v11',
    'HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_v14',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v17',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets100_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets200_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets350_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets40_PFBTagDeepJet_p71_v3',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepCSV_p71_v3',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoublePFBTagDeepJet_p71_v3',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v17',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v9',
    'HLT_Mu12eta2p3_PFJet40_v3',
    'HLT_Mu12eta2p3_v3',
    'HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v10',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v17',
    'HLT_Mu15_IsoVVVL_PFHT450_v17',
    'HLT_Mu15_IsoVVVL_PFHT600_v21',
    'HLT_Mu15_v5',
    'HLT_Mu17_Photon30_IsoCaloId_v8',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v7',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v17',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v16',
    'HLT_Mu17_TrkIsoVVL_v15',
    'HLT_Mu17_v15',
    'HLT_Mu18_Mu9_SameSign_v6',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v5',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v5',
    'HLT_Mu19_TrkIsoVVL_v6',
    'HLT_Mu19_v6',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v3',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu20_v14',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v17',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v9',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu27_Ele37_CaloIdL_MW_v7',
    'HLT_Mu27_v15',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu37_Ele27_CaloIdL_MW_v7',
    'HLT_Mu37_TkMu27_v7',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v3',
    'HLT_Mu3_PFJet40_v18',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v4',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v4',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v3',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v7',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v7',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v17',
    'HLT_Mu50_IsoVVVL_PFHT450_v17',
    'HLT_Mu50_L1SingleMuShower_v1',
    'HLT_Mu50_v15',
    'HLT_Mu55_v5',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive0PtrkShortSig5_v3',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v3',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v3',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v3',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v3',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v20',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v20',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v21',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v21',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v18',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBTagParticleNet_2BTagSum0p65_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v3',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_QuadPFJet70_50_40_30_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v13',
    'HLT_Mu8_TrkIsoVVL_v14',
    'HLT_Mu8_v14',
    'HLT_OnlineMonitorGroup_v3',
    'HLT_PFHT1050_v20',
    'HLT_PFHT180_v19',
    'HLT_PFHT250_v19',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_v5',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v11',
    'HLT_PFHT350_v21',
    'HLT_PFHT370_v19',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_v10',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepJet_4p5_v3',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_v10',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepJet_4p5_v3',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v10',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepJet_2p94_v3',
    'HLT_PFHT400_SixPFJet32_v10',
    'HLT_PFHT430_v19',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_v9',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepJet_1p59_v3',
    'HLT_PFHT450_SixPFJet36_v9',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v14',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v14',
    'HLT_PFHT510_v19',
    'HLT_PFHT590_v19',
    'HLT_PFHT680_v19',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v14',
    'HLT_PFHT780_v19',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v14',
    'HLT_PFHT890_v19',
    'HLT_PFJet110_v2',
    'HLT_PFJet140_v21',
    'HLT_PFJet200_v21',
    'HLT_PFJet260_v22',
    'HLT_PFJet320_v22',
    'HLT_PFJet400_v22',
    'HLT_PFJet40_v23',
    'HLT_PFJet450_v23',
    'HLT_PFJet500_v23',
    'HLT_PFJet550_v13',
    'HLT_PFJet60_v23',
    'HLT_PFJet80_v22',
    'HLT_PFJetFwd140_v20',
    'HLT_PFJetFwd15_v5',
    'HLT_PFJetFwd200_v20',
    'HLT_PFJetFwd25_v5',
    'HLT_PFJetFwd260_v21',
    'HLT_PFJetFwd320_v21',
    'HLT_PFJetFwd400_v21',
    'HLT_PFJetFwd40_v21',
    'HLT_PFJetFwd450_v21',
    'HLT_PFJetFwd500_v21',
    'HLT_PFJetFwd60_v21',
    'HLT_PFJetFwd80_v20',
    'HLT_PFMET100_PFMHT100_IDTight_PFHT60_v11',
    'HLT_PFMET105_IsoTrk50_v3',
    'HLT_PFMET110_PFJet100_v3',
    'HLT_PFMET110_PFMHT110_IDTight_v22',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v11',
    'HLT_PFMET120_PFMHT120_IDTight_v22',
    'HLT_PFMET130_PFMHT130_IDTight_v22',
    'HLT_PFMET140_PFMHT140_IDTight_v22',
    'HLT_PFMET200_BeamHaloCleaned_v11',
    'HLT_PFMET200_NotCleaned_v11',
    'HLT_PFMET250_NotCleaned_v11',
    'HLT_PFMET300_NotCleaned_v11',
    'HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_v11',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_v22',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v11',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v22',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v21',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v2',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v21',
    'HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_v11',
    'HLT_PFMETTypeOne110_PFMHT110_IDTight_v14',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_v11',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_v14',
    'HLT_PFMETTypeOne130_PFMHT130_IDTight_v14',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v13',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v11',
    'HLT_Photon100EBHE10_v4',
    'HLT_Photon110EB_TightID_TightIso_v4',
    'HLT_Photon120_R9Id90_HE10_IsoM_v16',
    'HLT_Photon120_v15',
    'HLT_Photon150_v9',
    'HLT_Photon165_R9Id90_HE10_IsoM_v17',
    'HLT_Photon175_v17',
    'HLT_Photon200_v16',
    'HLT_Photon20_HoverELoose_v12',
    'HLT_Photon20_v4',
    'HLT_Photon300_NoHE_v15',
    'HLT_Photon30EB_TightID_TightIso_v3')+cms.vstring( 'HLT_Photon30_HoverELoose_v12',
    'HLT_Photon33_v7',
    'HLT_Photon35_TwoProngs35_v3',
    'HLT_Photon50_R9Id90_HE10_IsoM_v16',
    'HLT_Photon50_v15',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_v14',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v7',
    'HLT_Photon75_R9Id90_HE10_IsoM_v16',
    'HLT_Photon75_v15',
    'HLT_Photon90_R9Id90_HE10_IsoM_v16',
    'HLT_Photon90_v15',
    'HLT_Physics_v8',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet103_88_75_15_v7',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet105_88_76_15_v7',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v10',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepJet_1p3_7p7_VBF1_v3',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_v10',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepJet_1p3_VBF2_v3',
    'HLT_QuadPFJet111_90_80_15_v7',
    'HLT_QuadPFJet70_50_40_30_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_QuadPFJet70_50_40_30_v3',
    'HLT_QuadPFJet70_50_40_35_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_QuadPFJet70_50_45_35_PFBTagParticleNet_2BTagSum0p65_v3',
    'HLT_Random_v3',
    'HLT_SingleJet30_Mu12_SinglePFJet40_v13',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v11',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v11',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v11',
    'HLT_TripleMu_10_5_5_DZ_v12',
    'HLT_TripleMu_12_10_5_v12',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v5',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v10',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v8',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v7',
    'HLT_UncorrectedJetE30_NoBPTX_v7',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v7',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v7',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v2',
    'HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_v3',
    'HLT_ZeroBias_Alignment_v2',
    'HLT_ZeroBias_FirstBXAfterTrain_v4',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v6',
    'HLT_ZeroBias_FirstCollisionInTrain_v5',
    'HLT_ZeroBias_IsolatedBunches_v6',
    'HLT_ZeroBias_LastCollisionInTrain_v4',
    'HLT_ZeroBias_v7') ),
  ParkingDoubleElectronLowMass0 = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v2',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_v2',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_v2',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_v2',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_v2',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_v2',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v2',
    'HLT_SingleEle8_SingleEGL1_v1',
    'HLT_SingleEle8_v1' ),
  ParkingDoubleElectronLowMass1 = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v2',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_v2',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_v2',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_v2',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_v2',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_v2',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v2',
    'HLT_SingleEle8_SingleEGL1_v1',
    'HLT_SingleEle8_v1' ),
  ParkingDoubleElectronLowMass2 = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v2',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_v2',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_v2',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_v2',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_v2',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_v2',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v2',
    'HLT_SingleEle8_SingleEGL1_v1',
    'HLT_SingleEle8_v1' ),
  ParkingDoubleElectronLowMass3 = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v2',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_v2',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_v2',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_v2',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_v2',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_v2',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v2',
    'HLT_SingleEle8_SingleEGL1_v1',
    'HLT_SingleEle8_v1' ),
  ParkingDoubleElectronLowMass4 = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v2',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_v2',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_v2',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_v2',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_v2',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_v2',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v2',
    'HLT_SingleEle8_SingleEGL1_v1',
    'HLT_SingleEle8_v1' ),
  ParkingDoubleElectronLowMass5 = cms.vstring( 'HLT_DoubleEle10_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle10_eta1p22_mMax6_v2',
    'HLT_DoubleEle4_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4_eta1p22_mMax6_v2',
    'HLT_DoubleEle4p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle4p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5_eta1p22_mMax6_v2',
    'HLT_DoubleEle5p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle5p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle6_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6_eta1p22_mMax6_v2',
    'HLT_DoubleEle6p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle7_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7_eta1p22_mMax6_v2',
    'HLT_DoubleEle7p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle7p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle8_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8_eta1p22_mMax6_v2',
    'HLT_DoubleEle8p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle8p5_eta1p22_mMax6_v2',
    'HLT_DoubleEle9_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9_eta1p22_mMax6_v2',
    'HLT_DoubleEle9p5_eta1p22_mMax6_dz0p8_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_trkHits10_v1',
    'HLT_DoubleEle9p5_eta1p22_mMax6_v2',
    'HLT_SingleEle8_SingleEGL1_v1',
    'HLT_SingleEle8_v1' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass4 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass5 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass6 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingDoubleMuonLowMass7 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon10_Upsilon_y1p4_v3',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v7',
    'HLT_Dimuon14_PsiPrime_v15',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_3_LowMass_v3',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_JpsiTrk_Bc_v2',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_LowMass_Displaced_v3',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ParkingSingleMuon0 = cms.vstring( 'HLT_Mu12_IP6_v2' ),
  ParkingSingleMuon1 = cms.vstring( 'HLT_Mu12_IP6_v2' ),
  ParkingSingleMuon2 = cms.vstring( 'HLT_Mu12_IP6_v2' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNormalisation_v14' ),
  ReservedDoubleMuonLowMass = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v7',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v9',
    'HLT_Dimuon0_Jpsi_NoVertexing_v10',
    'HLT_Dimuon0_Jpsi_v10',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v9',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v10',
    'HLT_Dimuon0_LowMass_L1_4R_v9',
    'HLT_Dimuon0_LowMass_L1_4_v10',
    'HLT_Dimuon0_LowMass_L1_TM530_v8',
    'HLT_Dimuon0_LowMass_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v10',
    'HLT_Dimuon0_Upsilon_L1_4p5_v11',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v11',
    'HLT_Dimuon0_Upsilon_L1_5M_v10',
    'HLT_Dimuon0_Upsilon_L1_5_v11',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v8',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v8',
    'HLT_Dimuon0_Upsilon_NoVertexing_v9',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v4',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v9',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v8',
    'HLT_Dimuon18_PsiPrime_v16',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v9',
    'HLT_Dimuon24_Phi_noCorrL1_v8',
    'HLT_Dimuon24_Upsilon_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_noCorrL1_v8',
    'HLT_Dimuon25_Jpsi_v16',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v8',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v8',
    'HLT_DoubleMu3_Trk_Tau3mu_v14',
    'HLT_DoubleMu4_3_Bs_v17',
    'HLT_DoubleMu4_3_Jpsi_v17',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_Displaced_v9',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v17',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v6',
    'HLT_Mu20_TkMu0_Phi_v10',
    'HLT_Mu25_TkMu0_Onia_v10',
    'HLT_Mu25_TkMu0_Phi_v10',
    'HLT_Mu30_TkMu0_Psi_v3',
    'HLT_Mu30_TkMu0_Upsilon_v3',
    'HLT_Mu4_L1DoubleMu_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v12',
    'HLT_Mu7p5_L2Mu2_Upsilon_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v6',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v7',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v5' ),
  ScoutingPFMonitor = cms.vstring( 'DST_Run3_PFScoutingPixelTracking_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v17',
    'HLT_Ele35_WPTight_Gsf_v11',
    'HLT_IsoMu27_v18',
    'HLT_Mu50_v15',
    'HLT_PFHT1050_v20',
    'HLT_Photon200_v16' ),
  ScoutingPFRun3 = cms.vstring( 'DST_HLTMuon_Run3_PFScoutingPixelTracking_v18',
    'DST_Run3_PFScoutingPixelTracking_v18' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v3',
    'HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_v3',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v2',
    'HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_v2',
    'HLT_DoublePFJets40_Mass500_MediumDeepTauPFTauHPS45_L2NN_MediumDeepTauPFTauHPS20_eta2p1_v2',
    'HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_v3',
    'HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_v3',
    'HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_v14',
    'HLT_Photon35_TwoProngs35_v3',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v2',
    'HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_v3' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v5' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v5' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v2',
    'HLT_ZeroBias_FirstBXAfterTrain_v4',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v6',
    'HLT_ZeroBias_FirstCollisionInTrain_v5',
    'HLT_ZeroBias_IsolatedBunches_v6',
    'HLT_ZeroBias_LastCollisionInTrain_v4',
    'HLT_ZeroBias_v7' )
)

CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "CSCChannelMapperRecord" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
CSCINdexerESSource = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "CSCIndexerRecord" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "L1TGlobalParametersRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
GlobalTag = cms.ESSource( "PoolDBESSource",
  DBParameters = cms.PSet( 
    connectionRetrialTimeOut = cms.untracked.int32( 60 ),
    idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
    enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
    enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
    messageLevel = cms.untracked.int32( 0 ),
    authenticationPath = cms.untracked.string( "." ),
    connectionRetrialPeriod = cms.untracked.int32( 10 ),
    connectionTimeOut = cms.untracked.int32( 0 ),
    enableConnectionSharing = cms.untracked.bool( True )
  ),
  connect = cms.string( "frontier://FrontierProd/CMS_CONDITIONS" ),
  globaltag = cms.string( "None" ),
  snapshotTime = cms.string( "" ),
  toGet = cms.VPSet( 
    cms.PSet(  refreshTime = cms.uint64( 2 ),
      record = cms.string( "BeamSpotOnlineLegacyObjectsRcd" )
    ),
    cms.PSet(  refreshTime = cms.uint64( 2 ),
      record = cms.string( "BeamSpotOnlineHLTObjectsRcd" )
    )
  ),
  DumpStat = cms.untracked.bool( False ),
  ReconnectEachRun = cms.untracked.bool( True ),
  RefreshAlways = cms.untracked.bool( False ),
  RefreshEachRun = cms.untracked.bool( True ),
  RefreshOpenIOVs = cms.untracked.bool( False ),
  pfnPostfix = cms.untracked.string( "" ),
  pfnPrefix = cms.untracked.string( "" )
)
HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
  appendToDataLabel = cms.string( "HBHE" ),
  timeSlewParametersM2 = cms.VPSet( 
    cms.PSet(  tmax = cms.double( 16.0 ),
      tzero = cms.double( 23.960177 ),
      slope = cms.double( -3.178648 )
    ),
    cms.PSet(  tmax = cms.double( 10.0 ),
      tzero = cms.double( 11.977461 ),
      slope = cms.double( -1.5610227 )
    ),
    cms.PSet(  tmax = cms.double( 6.25 ),
      tzero = cms.double( 9.109694 ),
      slope = cms.double( -1.075824 )
    )
  ),
  timeSlewParametersM3 = cms.VPSet( 
    cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 ),
      tspar2 = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar1 = cms.double( -2.19142 ),
      tspar0 = cms.double( 12.2999 ),
      tspar1_siPM = cms.double( 0.0 )
    ),
    cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 ),
      tspar2 = cms.double( 32.0 ),
      cap = cms.double( 6.0 ),
      tspar1 = cms.double( -3.2 ),
      tspar0 = cms.double( 15.5 ),
      tspar1_siPM = cms.double( 0.0 )
    ),
    cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 ),
      tspar2 = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar1 = cms.double( -2.19142 ),
      tspar0 = cms.double( 12.2999 ),
      tspar1_siPM = cms.double( 0.0 )
    ),
    cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 ),
      tspar2 = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar1 = cms.double( -2.19142 ),
      tspar0 = cms.double( 12.2999 ),
      tspar1_siPM = cms.double( 0.0 )
    )
  )
)
HepPDTESSource = cms.ESSource( "HepPDTESSource",
  pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" )
)
ecalMultifitParametersGPUESProducer = cms.ESSource( "EcalMultifitParametersGPUESProducer",
  pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
  EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
  EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
  EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
  EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
  appendToDataLabel = cms.string( "" )
)
ecalRecHitParametersGPUESProducer = cms.ESSource( "EcalRecHitParametersGPUESProducer",
  ChannelStatusToBeExcluded = cms.vstring( 'kDAC',
    'kNoisy',
    'kNNoisy',
    'kFixedG6',
    'kFixedG1',
    'kFixedG0',
    'kNonRespondingIsolated',
    'kDeadVFE',
    'kDeadFE',
    'kNoDataNoTP' ),
  flagsMapDBReco = cms.PSet( 
    kDead = cms.vstring( 'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk',
      'kDAC',
      'kNoLaser',
      'kNoisy' ),
    kTowerRecovered = cms.vstring( 'kDeadFE' ),
    kNoisy = cms.vstring( 'kNNoisy',
      'kFixedG6',
      'kFixedG1' ),
    kNeighboursRecovered = cms.vstring( 'kFixedG0',
      'kNonRespondingIsolated',
      'kDeadVFE' )
  ),
  appendToDataLabel = cms.string( "" )
)
eegeom = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "EcalMappingRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
  fromDDD = cms.untracked.bool( False ),
  toGet = cms.untracked.vstring( 'GainWidths' )
)
hcalMahiPulseOffsetsGPUESProducer = cms.ESSource( "HcalMahiPulseOffsetsGPUESProducer",
  pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
  appendToDataLabel = cms.string( "" )
)
hltESSBTagRecord = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "JetTagComputerRecord" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  firstValid = cms.vuint32( 1 )
)
ppsPixelTopologyESSource = cms.ESSource( "PPSPixelTopologyESSource",
  RunType = cms.string( "Run3" ),
  PitchSimY = cms.double( 0.15 ),
  PitchSimX = cms.double( 0.1 ),
  thickness = cms.double( 0.23 ),
  noOfPixelSimX = cms.int32( 160 ),
  noOfPixelSimY = cms.int32( 104 ),
  noOfPixels = cms.int32( 16640 ),
  simXWidth = cms.double( 16.6 ),
  simYWidth = cms.double( 16.2 ),
  deadEdgeWidth = cms.double( 0.2 ),
  activeEdgeSigma = cms.double( 0.02 ),
  physActiveEdgeDist = cms.double( 0.15 ),
  appendToDataLabel = cms.string( "" )
)

AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" )
)
CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( False ),
  useCentreTIOffsets = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  debugV = cms.untracked.bool( False )
)
CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  DDDetector = cms.ESInputTag( "","" ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  attribute = cms.string( "MuStructure" ),
  value = cms.string( "MuonBarrelDT" ),
  applyAlignment = cms.bool( True )
)
DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder" )
EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  maxExtrapolationTimeInSec = cms.uint32( 0 ),
  appendToDataLabel = cms.string( "" )
)
EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
GEMGeometryESModule = cms.ESProducer( "GEMGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  applyAlignment = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  TotalBxInEvent = cms.int32( 5 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  NumberL1EGamma = cms.uint32( 12 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberChips = cms.uint32( 1 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberL1JetCounts = cms.uint32( 12 ),
  UnitLength = cms.int32( 8 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Mu = cms.uint32( 4 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberL1CenJet = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberPhysTriggersExtended = cms.uint32( 64 ),
  WordLength = cms.int32( 64 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  Exclude = cms.untracked.string( "" ),
  MergePosition = cms.untracked.bool( True ),
  appendToDataLabel = cms.string( "" )
)
MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
ParametrizedMagneticFieldProducer = cms.ESProducer( "AutoParametrizedMagneticFieldProducer",
  version = cms.string( "Parabolic" ),
  label = cms.untracked.string( "ParabolicMf" ),
  valueOverride = cms.int32( -1 )
)
PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 4.0 ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  fromDDD = cms.untracked.bool( False ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
SiStripClusterizerConditionsESProducer = cms.ESProducer( "SiStripClusterizerConditionsESProducer",
  QualityLabel = cms.string( "" ),
  Label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  appendToDataLabel = cms.string( "" ),
  printDebug = cms.untracked.bool( False ),
  AutomaticNormalization = cms.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGainRcd" )
    ),
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGain2Rcd" )
    )
  )
)
SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  ),
  ReduceGranularity = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  PrintDebugOutput = cms.bool( False ),
  UseEmptyRunInfo = cms.bool( False )
)
SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  PreFilter = cms.bool( False )
)
SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  use3d = cms.bool( True ),
  unBoost = cms.bool( False ),
  useSignificance = cms.bool( True ),
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 )
)
SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" )
)
VolumeBasedMagneticFieldESProducer = cms.ESProducer( "VolumeBasedMagneticFieldESProducerFromDB",
  label = cms.untracked.string( "" ),
  debugBuilder = cms.untracked.bool( False ),
  valueOverride = cms.int32( -1 )
)
ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  SimpleMagneticField = cms.string( "" )
)
ctppsGeometryESModule = cms.ESProducer( "CTPPSGeometryESModule",
  verbosity = cms.untracked.uint32( 1 ),
  buildMisalignedGeometry = cms.bool( False ),
  isRun2 = cms.bool( False ),
  dbTag = cms.string( "" ),
  compactViewTag = cms.string( "" ),
  fromPreprocessedDB = cms.untracked.bool( True ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer( "CTPPSInterpolatedOpticalFunctionsESSource",
  lhcInfoLabel = cms.string( "" ),
  opticsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
ecalElectronicsMappingGPUESProducer = cms.ESProducer( "EcalElectronicsMappingGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalGainRatiosGPUESProducer = cms.ESProducer( "EcalGainRatiosGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalIntercalibConstantsGPUESProducer = cms.ESProducer( "EcalIntercalibConstantsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalLaserAPDPNRatiosGPUESProducer = cms.ESProducer( "EcalLaserAPDPNRatiosGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalLaserAPDPNRatiosRefGPUESProducer = cms.ESProducer( "EcalLaserAPDPNRatiosRefGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalLaserAlphasGPUESProducer = cms.ESProducer( "EcalLaserAlphasGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalLinearCorrectionsGPUESProducer = cms.ESProducer( "EcalLinearCorrectionsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalPedestalsGPUESProducer = cms.ESProducer( "EcalPedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalPulseCovariancesGPUESProducer = cms.ESProducer( "EcalPulseCovariancesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalPulseShapesGPUESProducer = cms.ESProducer( "EcalPulseShapesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalRechitADCToGeVConstantGPUESProducer = cms.ESProducer( "EcalRechitADCToGeVConstantGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalRechitChannelStatusGPUESProducer = cms.ESProducer( "EcalRechitChannelStatusGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalSamplesCorrelationGPUESProducer = cms.ESProducer( "EcalSamplesCorrelationGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  ),
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 )
)
ecalTimeBiasCorrectionsGPUESProducer = cms.ESProducer( "EcalTimeBiasCorrectionsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
ecalTimeCalibConstantsGPUESProducer = cms.ESProducer( "EcalTimeCalibConstantsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalChannelPropertiesESProd = cms.ESProducer( "HcalChannelPropertiesEP" )
hcalChannelQualityGPUESProducer = cms.ESProducer( "HcalChannelQualityGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalConvertedEffectivePedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "withTopoEff" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalConvertedEffectivePedestalsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalConvertedPedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalConvertedPedestalsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
hcalElectronicsMappingGPUESProducer = cms.ESProducer( "HcalElectronicsMappingGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalGainWidthsGPUESProducer = cms.ESProducer( "HcalGainWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalGainsGPUESProducer = cms.ESProducer( "HcalGainsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalLUTCorrsGPUESProducer = cms.ESProducer( "HcalLUTCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalQIECodersGPUESProducer = cms.ESProducer( "HcalQIECodersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalQIETypesGPUESProducer = cms.ESProducer( "HcalQIETypesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring(  ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring(  ),
      RecHitFlags = cms.vstring( 'TimingFromTDC' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring(  ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHEIsolatedNoise',
        'HBHEFlatNoise',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHENegativeNoise',
        'HBHEPulseFitBit',
        'HBHEOOTPU' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring(  ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' ),
  appendToDataLabel = cms.string( "" )
)
hcalRecoParamsWithPulseShapesGPUESProducer = cms.ESProducer( "HcalRecoParamsWithPulseShapesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalRespCorrsGPUESProducer = cms.ESProducer( "HcalRespCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalSiPMCharacteristicsGPUESProducer = cms.ESProducer( "HcalSiPMCharacteristicsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalSiPMParametersGPUESProducer = cms.ESProducer( "HcalSiPMParametersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcalTimeCorrsGPUESProducer = cms.ESProducer( "HcalTimeCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hcal_db_producer = cms.ESProducer( "HcalDbProducer" )
hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  useCondDB = cms.bool( False ),
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False )
)
hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" )
)
hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  PropagationDirection = cms.string( "oppositeToMomentum" )
)
hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 2000.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 40.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  appendToDataLabel = cms.string( "" )
)
hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" )
)
hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
hltESPDisplacedDijethltPromptTrackCountingESProducerShortSig5 = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( False ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.05 ),
  maxImpactParameterSig = cms.double( 5.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
hltESPDisplacedDijethltTrackCounting2D1stLoose = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.03 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 2 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" )
)
hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer" )
hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  ErrorRescaling = cms.double( 100.0 ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 36.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" )
)
hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  DistanceMeasure = cms.string( "KullbackLeibler" )
)
hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer" )
hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
)
hltESPPixelCPEFast = cms.ESProducer( "PixelCPEFastESProducerPhase1",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPEFast" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( False ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  NoTemplateErrorsWhenNoTrkAngles = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  isPhase2 = cms.bool( False ),
  SmallPitch = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  barrelTemplateID = cms.int32( 0 ),
  forwardTemplateID = cms.int32( 0 ),
  directoryWithTemplates = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 25.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 )
)
hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 )
)
hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 )
)
hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  algoOrder = cms.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  usePhase2Stacks = cms.bool( False ),
  trackerGeometryLabel = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltOnlineBeamSpotESProducer = cms.ESProducer( "OnlineBeamSpotESProducer",
  timeThreshold = cms.int32( 48 ),
  sigmaZThreshold = cms.double( 2.0 ),
  appendToDataLabel = cms.string( "" )
)
hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  useQuadrupletAlgo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
multipleScatteringParametrisationMakerESProducer = cms.ESProducer( "MultipleScatteringParametrisationMakerESProducer",
  appendToDataLabel = cms.string( "" )
)
muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  SimpleMagneticField = cms.string( "ParabolicMf" )
)
preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
siPixelGainCalibrationForHLTGPU = cms.ESProducer( "SiPixelGainCalibrationForHLTGPUESProducer",
  appendToDataLabel = cms.string( "" )
)
siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  siPixelQualityLabel = cms.string( "" ),
  siPixelQualityLabel_RawToDigi = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  ),
  appendToDataLabel = cms.string( "" )
)
siPixelROCsStatusAndMappingWrapperESProducer = cms.ESProducer( "SiPixelROCsStatusAndMappingWrapperESProducer",
  ComponentName = cms.string( "" ),
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
sistripconn = cms.ESProducer( "SiStripConnectivity" )
trackerTopology = cms.ESProducer( "TrackerTopologyEP",
  appendToDataLabel = cms.string( "" )
)

CUDAService = cms.Service( "CUDAService",
  enabled = cms.untracked.bool( True ),
  verbose = cms.untracked.bool( False ),
  limits = cms.untracked.PSet( 
    cudaLimitDevRuntimePendingLaunchCount = cms.untracked.int32( -1 ),
    cudaLimitDevRuntimeSyncDepth = cms.untracked.int32( -1 ),
    cudaLimitStackSize = cms.untracked.int32( -1 ),
    cudaLimitPrintfFifoSize = cms.untracked.int32( -1 ),
    cudaLimitMallocHeapSize = cms.untracked.int32( -1 )
  ),
  allocator = cms.untracked.PSet( 
    hostPreallocate = cms.untracked.vuint32(  ),
    devicePreallocate = cms.untracked.vuint32(  )
  )
)
FastTimerService = cms.Service( "FastTimerService",
  printEventSummary = cms.untracked.bool( False ),
  printRunSummary = cms.untracked.bool( True ),
  printJobSummary = cms.untracked.bool( True ),
  writeJSONSummary = cms.untracked.bool( False ),
  jsonFileName = cms.untracked.string( "resources.json" ),
  enableDQM = cms.untracked.bool( True ),
  enableDQMbyModule = cms.untracked.bool( False ),
  enableDQMbyPath = cms.untracked.bool( False ),
  enableDQMbyLumiSection = cms.untracked.bool( True ),
  enableDQMbyProcesses = cms.untracked.bool( True ),
  enableDQMTransitions = cms.untracked.bool( False ),
  dqmTimeRange = cms.untracked.double( 2000.0 ),
  dqmTimeResolution = cms.untracked.double( 5.0 ),
  dqmMemoryRange = cms.untracked.double( 1000000.0 ),
  dqmMemoryResolution = cms.untracked.double( 5000.0 ),
  dqmPathTimeRange = cms.untracked.double( 100.0 ),
  dqmPathTimeResolution = cms.untracked.double( 0.5 ),
  dqmPathMemoryRange = cms.untracked.double( 1000000.0 ),
  dqmPathMemoryResolution = cms.untracked.double( 5000.0 ),
  dqmModuleTimeRange = cms.untracked.double( 40.0 ),
  dqmModuleTimeResolution = cms.untracked.double( 0.2 ),
  dqmModuleMemoryRange = cms.untracked.double( 100000.0 ),
  dqmModuleMemoryResolution = cms.untracked.double( 500.0 ),
  dqmLumiSectionsRange = cms.untracked.uint32( 2500 ),
  dqmPath = cms.untracked.string( "HLT/TimerService" ),
)
MessageLogger = cms.Service( "MessageLogger",
  suppressWarning = cms.untracked.vstring( 'hltL3MuonsIOHit',
    'hltL3MuonsOIHit',
    'hltL3MuonsOIState',
    'hltLightPFTracks',
    'hltOnlineBeamSpot',
    'hltPixelTracks',
    'hltPixelTracksForHighMult',
    'hltSiPixelClusters',
    'hltSiPixelDigis' ),
  suppressFwkInfo = cms.untracked.vstring(  ),
  suppressInfo = cms.untracked.vstring(  ),
  suppressDebug = cms.untracked.vstring(  ),
  debugModules = cms.untracked.vstring(  ),
  cerr = cms.untracked.PSet( 
    INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    noTimeStamps = cms.untracked.bool( False ),
    FwkReport = cms.untracked.PSet( 
      reportEvery = cms.untracked.int32( 1 ),
      limit = cms.untracked.int32( 0 )
    ),
    default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
    Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkSummary = cms.untracked.PSet( 
      reportEvery = cms.untracked.int32( 1 ),
      limit = cms.untracked.int32( 10000000 )
    ),
    threshold = cms.untracked.string( "INFO" ),
    enableStatistics = cms.untracked.bool( False )
  ),
  suppressError = cms.untracked.vstring( 'hltL3TkTracksFromL2IOHit',
    'hltL3TkTracksFromL2OIHit',
    'hltL3TkTracksFromL2OIState',
    'hltOnlineBeamSpot' )
)
ThroughputService = cms.Service( "ThroughputService",
  eventRange = cms.untracked.uint32( 10000 ),
  eventResolution = cms.untracked.uint32( 1 ),
  printEventSummary = cms.untracked.bool( False ),
  enableDQM = cms.untracked.bool( True ),
  dqmPathByProcesses = cms.untracked.bool( True ),
  dqmPath = cms.untracked.string( "HLT/Throughput" ),
  timeRange = cms.untracked.double( 60000.0 ),
  timeResolution = cms.untracked.double( 5.828 )
)


